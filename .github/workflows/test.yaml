name: Example Maven workflow with Snyk Code Test for SQL Injection
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Or your desired distribution
          java-version: '11'        # Or whichever version you're using

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Run Snyk Code Test and output to JSON
        run: snyk code test --json > snyk_code_results.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true  # Allow continuation despite vulnerabilities

      - name: Check and Filter SQL Injection issues from Snyk Code Test results
        run: |
          if [ -s snyk_code_results.json ]; then
            SQL_ISSUES=$(jq '[.vulnerabilities[] | select(.title | contains("SQL Injection"))] | length' snyk_code_results.json)
            if [ "$SQL_ISSUES" -gt 0 ]; then
              echo "SQL Injection vulnerabilities found."
              exit 1
            else
              echo "No SQL Injection vulnerabilities found."
            fi
          else
            echo "No vulnerabilities found or JSON file is empty."
          fi
